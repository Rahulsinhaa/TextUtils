{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","myStyle","setMyStyle","_useState3","_useState4","mode","setMode","react_default","a","createElement","className","id","style","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","src","process","alt","width","onClick","Navbar","props","concat","react_router_dom","to","title","aria-label","aria-current","togglemode","htmlFor","Textform","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","toUpperCase","showElert","toLowerCase","str","replace","m","document","getElementById","select","navigator","clipboard","writeText","newString","split","join","length","Alert","alert","role","msg","defaultProps","aboutText","App","setAlert","message","setTimeout","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4802f9b3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n    const [myStyle, setMyStyle] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n\r\n    const [mode, setMode] = useState('');\r\n\r\n\r\n\r\n    const toggleStyle = () => {\r\n        if (myStyle.color === 'black') {\r\n            setMyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            })\r\n            setMode('enable dark mode');\r\n        }\r\n        else {\r\n            setMyStyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n\r\n            setMode('disable darkmode')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"conatiner\" >\r\n            <h2 className='bg-light text-dark'>About Us</h2>\r\n            <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\"  >\r\n                <div className=\"accordion-item\" style={myStyle}  >\r\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n                            <strong>About the developer</strong>\r\n                        </button>\r\n                    </h2>\r\n                    \r\n                    <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"panelsStayOpen-headingOne\">\r\n                        <div className=\"accordion-body\">\r\n                        <img src={process.env.PUBLIC_URL+\"rahul.jpeg\"} alt=\"new imahe\" style={{width:200}}/><br/>\r\n                            <strong>Proffesional details.</strong><br/>\r\n                            <strong>  Name :- </strong> Rahul kumar sinha <br/>\r\n                            <strong>age:-</strong> 23 year<br/>\r\n                            <strong>Degree:-</strong> Masters in computer application <br/>\r\n                            <strong>University:-</strong> Chandigarh University.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"accordion-item\" style={myStyle} >\r\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseThree\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseThree\">\r\n                          <strong>Aap details</strong>  \r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"panelsStayOpen-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingThree\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>A text Utility Aap.</strong> This aap provides feature such as<br />\r\n                            <strong>Upper Case to Lower Case:-</strong>Converts upper case to lower case <br />\r\n                            <strong>Lower case to upper case:-</strong>Converts lower case to upper case  <br />\r\n                            <strong>Character counter:-   </strong>  Counts the number of characters in the paragraph<br />\r\n                            <strong>Word counter :- </strong>  Counts the number of words in the paragraph<br />\r\n                            <strong>Cut off extra Spaces </strong> Cut off extra spaces in the paragraph<br />\r\n                            <strong>Capatalize text </strong> Convert each and every words 1st letter to upper Case<br />\r\n                            <strong>Clear Text </strong> A Clear Text feature to clear the text area<br />\r\n                            <strong>Dark Mode </strong> A dark mode feature <br />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <button type=\"button\" onClick={toggleStyle} className=\"btn btn-primary\">{mode}</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","    import React from 'react'\r\n    \r\n    import { Link } from 'react-router-dom';\r\n    export default function Navbar(props) {\r\n      return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n        \r\n          \r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Default switch to {props.mode==='light'?'dark':'light'} mode</label>\r\n            </div>\r\n           \r\n          </div>\r\n        </div>\r\n      </nav>\r\n      \r\n      )\r\n    }\r\n\r\n\r\n    Navbar.defaultProps={\r\n    title:\"enter the title\",\r\n    aboutText:\"enter the details\"\r\n    }\r\n","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function Textform(props) {   \r\n    const handleUpclick= ()=>{\r\n    let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showElert(\"Thw text have been converte to Upper case\",\"Success\");\r\n    }\r\n    const handlepLclick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showElert(\"Thw text have been converte to Lowe case\",\"Success\");\r\n    }\r\n\r\n    const handlcleanLclick=()=>{\r\n        let newText=\"\";\r\n        setText(newText);\r\n        props.showElert(\"text area cleaned\",\"Success\");\r\n    }\r\n    const handlcAPITALISELclick=()=>{\r\n\r\n        const toTitleCase = str => text.replace(/(^\\w|\\s\\w)/g, m => m.toUpperCase());\r\n       setText(toTitleCase);   \r\n       props.showElert(\"text have been capatilized\",\"Success\");\r\n    }\r\n\r\n    const handlCopy=()=>{\r\n        var text=document.getElementById(\"MyBox\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showElert(\"text have been copied\",\"Success\");   \r\n    }\r\n\r\n    const handlExtraSpaces=()=>{\r\n       let newString = text.split(/[ ]+/); \r\n        setText(newString.join(\" \"));\r\n        props.showElert(\"extra spaces have been cleared\",\"Success\")\r\n    }\r\n\r\n\r\n    const handleOnchange= (event)=>{\r\n        // console.log(\"on change\")\r\n       setText(event.target.value);\r\n       \r\n    }\r\n    const [text, setText] = useState('enter the text');\r\n  \r\n    return (\r\n        <>\r\n        <h1 className='bg-dark'>{props.heading}</h1>\r\n            <div>\r\n                <textarea className={`form-control text-${props.mode==='dark'?'light':'dark'}`}value={text} onChange={handleOnchange} style={{backgroundColor:props.mode==='dark'?'grey':'white'}} id=\"MyBox\" rows=\"8\"></textarea>\r\n            </div>\r\n          <div className='col-md-12 text-center my-3'>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleUpclick}>Convert to uper case</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handlepLclick}>Convert to lower case</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handlcleanLclick}>clear text</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handlcAPITALISELclick}>capitalize text text</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handlCopy}>copy text</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handlExtraSpaces}>cut off extra spaces </button>\r\n            </div>\r\n            <br/>\r\n         <h1 className='bg-dark'>my text summary</h1>\r\n        \r\n         <p className={`text-${props.mode==='dark'?'light':'dark'}`}> characters count <b>{text.length}</b></p>\r\n         \r\n         <p className={`text-${props.mode==='dark'?'light':'dark'}`}> word count <b>{text.split(\" \").length}</b></p>\r\n         <p className={`text-${props.mode==='dark'?'light':'dark'}`}> time taken to read <b> {0.008 * text.split(\" \").length}</b></p>\r\n         <h2 className={`text-${props.mode==='dark'?'light':'dark'}`}>preview</h2>\r\n         <p className={`text-${props.mode==='dark'?'light':'dark'}`}>{text}</p>\r\n        </>\r\n    ) \r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n  props.alert &&  <div><div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n    <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n  </div></div>\r\n  )\r\n}\r\n","\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null);\n\n  const showElert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const togglemode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#313161';\n      showElert(\"dark mode has been enabled\", \"Success\");\n    }\n    else {\n      setMode('light');\n      document.body.style = '#313161';\n      showElert(\"light mode has been enabled\", \"Success\");\n    }\n\n  }\n\n\n\n\n\n  return (\n\n    <>\n    <Router>\n      <Navbar title=\"Text converter\" mode={mode} togglemode={togglemode} />\n      {/* <Navbar title=\"taxtConverter\"/> */}\n      <Alert alert={alert} />\n      <div className=\"container my-5 text-white text-center\">\n      <Switch>\n          <Route exact path=\"/about\">\n            <About/>\n          </Route>\n          <Route exact path=\"/\">\n             <Textform heading=\"Enter the text you want to analyse\" showElert={showElert} mode={mode} />\n          </Route>\n          </Switch>\n      \n      </div>\n      </Router>\n\n\n\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}